apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: mysql
  labels:
    app: mysql
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: mysql
    spec:
      affinity:
        nodeAffinity:
 {{- if .Values.global.requiredaffinity.enabled }}
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: "provider.cubepaas.com/driver"
                operator: In
                values:
    {{- if eq .Values.global.affinity.domain "idc" }}
                 - ""
    {{- else }}
                  - "{{ .Values.global.affinity.domain }}"
    {{- end }}
{{- end }}
 {{- if .Values.global.preferenceaffinity.enabled }}
           preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: "provider.cubepaas.com/driver"
                operator: In
                values:
  {{- if eq .Values.global.affinity.domain "idc" }}
                - ""
  {{- else }}
                - "{{ .Values.global.affinity.domain }}"
  {{- end }}
{{- end }}
      containers:
      - env:
        - name: MYSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-password
        - name: MYSQL_USER
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql-user
        - name: MYSQL_DATABASE
          value: {{ .Values.mysqldatabase}}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        {{- if eq .Values.image.tag "5.7" }}
        args: ["--ignore-db-dir=lost+found", "--character-set-server=utf8mb4"]
        {{- end}}
        name: mysql
        ports:
        - containerPort: {{ .Values.service.port }}
        resources:
          limits:
            cpu: 500m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 200Mi
        volumeMounts:
        - name: data
          mountPath: /var/lib/mysql
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
      storageClassName: {{ .Values.persistence.storageClass }}